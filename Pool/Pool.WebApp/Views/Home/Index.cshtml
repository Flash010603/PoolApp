@{
    ViewData["Title"] = "Home Page";
}

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/home.css" />
    <title>Home</title>
</head>
<body>

    <nav>
        <div class="logo">
            <div class="logo_insert"></div>
        </div>

        <div class="items_menu">
            <a asp-area="" asp-controller="Home" asp-action="Index" class="active">Inicio</a>
            <a asp-area="" asp-controller="Config" asp-action="Index">Configuración</a>
            <a asp-area="" asp-controller="Table" asp-action="Index">Registro</a>
        </div>

        <div class="cont_btn">
            <button>@Html.ActionLink("Salir", "Salir", "Home", "", new { @class = "text-white text-decoration-none" }) <i class="fas fa-sign-out-alt"></i></button>
        </div>
    </nav>

    <div class="contenedor_pool">

        @{
            if (ViewBag.Error == "1")
            {
                <p class="alert alert-danger text-center fw-bold"> Error al actualizar datos</p>
            
            }
            else if (ViewBag.Error == "0")
            {
                <p class="alert alert-success text-center fw-bold"> Datos actualizados </p>
            }
        }

        @{
            if (!ViewBag.ExistsData)
            {
                <div class="container">
                    <div class="row">
                        <div class="col-7 mx-auto mt-5 text-white">
                            <p class="display-2 fw-bold">No hay una piscina registrada</p>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="data_pool">
                    <h2 class="title_pool">  @ViewBag.PoolName</h2>
                    <span class="dir_pool">
                        @ViewBag.Location
                    </span>
                </div>

                <div class="grid_info">
                    <div class="temp box">
                        <div class="titulo">
                            <p>Temperatura</p>
                        </div>
                        <div class="info">
                            <div class="dato">
                                <span id="temp_campo">@ViewBag.Temp</span>
                                <span>@ViewBag.Grados</span>
                            </div>

                            <div class="img">
                                <img src="~/img/caliente.png" alt="" />
                            </div>
                        </div>
                    </div>

                    <div class="ph box">
                        <div class="titulo">
                            <p>pH</p>
                        </div>
                        <div class="info">
                            <div class="dato">
                                <span id="ph_campo">@ViewBag.Ph</span>
                            </div>

                            <div class="img">
                                <img src="~/img/prueba.png" alt="" />
                            </div>
                        </div>
                    </div>
                </div>

                <button class="btn_refres mb-4" id="btn_refres_origi">
                    Actualizar <i class="fas fa-sync-alt"></i>
                </button>
                <button class="btn_refres bg-danger mb-4">
                    @Html.ActionLink("Eliminar piscina", "Eliminar", "Home", "", new { @class = "text-white mx-2 text-decoration-none" }) <i class="fas fa-sync-alt"></i>
                </button>
            }
        }


    </div>

    <div class="area">
        <ul class="circles">
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
            <li></li>
        </ul>
    </div>
    <script src="https://kit.fontawesome.com/5fa83d646f.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.18/dist/sweetalert2.all.min.js"></script>
    <script>

        const alerta = document.querySelector(".alert");
        if (alerta) {
            setTimeout(() => {
                alerta.remove();
            }, 2000)
        }


        document.querySelector("#btn_refres_origi").addEventListener("click", async() => {

            const url = '@ViewBag.UrlPool';
            const res = await fetch(url);
            const data = await res.json();

            actualizarData(data);

        })

        document.addEventListener("DOMContentLoaded", async() => {

            comprobarAlerta()
        })

        const actualizarData = async(data) => {
            const newData = {
                id: data.id,
                name_Pool: data.name_Pool,
                location: data.location,
                temp_min: data.temp_min,
                temp_max: data.temp_max,
                temp_current: data.temp_current,
                ph_min: data.ph_min,
                ph_max: data.ph_max,
                ph_current: data.ph_current,
                grados: data.grados,
                idUser: data.idUser,
            }

            const url = 'https://localhost:5001/Pool';
            const res = await fetch(url, {
                method: "PUT",
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(newData)
            });
            const data_nueva = await res.json();

            colocarData(data_nueva.ph_current, data_nueva.temp_current, data_nueva.grados);
        }

        const colocarData = (ph, temp, grados) => {
            const temp_campo = document.getElementById("temp_campo");
            const ph_campo = document.getElementById("ph_campo");

            let temp_final=0;

            switch (grados) {
                case "c":
                    temp_final = Number(temp)
                    break;
                case "f":
                    temp_final = (Number(temp) * 1.8) + 32;
                    break;
                case "k":
                    temp_final = Number(temp) + 273.15;
                    break;
            }


            temp_campo.textContent = temp_final;
            ph_campo.textContent = ph;

            comprobarAlerta();
        }

        const comprobarAlerta = async() => {

            const url = '@ViewBag.UrlPool';
            const res = await fetch(url);
            const data = await res.json();

            const temp_campo = document.getElementById("temp_campo").textContent;
            const ph_campo = document.getElementById("ph_campo").textContent;



            let text = "";
            let error = false;
            if (Number(temp_campo) > data.temp_max || Number(temp_campo )< data.temp_min) {
                text += "¡Cuida la temperatura!";
                error = true;
            } else if (Number(ph_campo )> data.ph_max || Number(ph_campo) < data.ph_min) {
                text += " ¡Cuida el pH!";
                error = true
            }

            (error) && alertaPool(text)

        }


        const alertaPool = (text) => {
            Swal.fire({
                icon: 'warning',
                title: 'Alerta en tu piscina',
                text,
            })
        }

    </script>
</body>